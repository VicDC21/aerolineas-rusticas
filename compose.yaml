name: aerolineas_rusticas

services:
  # Al ser el primero, tiene la responsabilidad de crear la imagen
  # si no existe todavía
  nodo_10:
    container_name: nodo-10
    # Para que use la imagen si ya fue construida antes
    image: nodos-slim
    build:
      context: .
      # -f
      dockerfile: ./docker/nd-slim/Dockerfile
      # las tags, como el nombre de la imagen
      tags:
        - "nodos-slim"
    # -i
    stdin_open: true
    # -t
    tty: true
    # --network=host
    networks:
      between_nodes:
        ipv4_address: 202.10.0.8
      client_side:
    ports:
      - "127.0.0.10:6174:6174/tcp"
      - "127.0.0.10:8080:8080/tcp"
    # Los argumentos que vienen después de invocar al binario
    command: "10"

  nodo_11:
    container_name: nodo-11
    depends_on:
      - nodo_10
    image: nodos-slim
    stdin_open: true
    tty: true
    networks:
      between_nodes:
        ipv4_address: 203.80.44.23
      client_side:
    ports:
      - "127.0.0.11:6174:6174/tcp"
      - "127.0.0.11:8080:8080/tcp"
    command: "11"

  nodo_12:
    container_name: nodo-12
    depends_on:
      - nodo_10
      - nodo_11
    image: nodos-slim
    stdin_open: true
    tty: true
    networks:
      between_nodes:
        ipv4_address: 200.200.200.201
      client_side:
    ports:
      - "127.0.0.12:6174:6174/tcp"
      - "127.0.0.12:8080:8080/tcp"
    command: "12"

  nodo_13:
    container_name: nodo-13
    depends_on:
      - nodo_10
      - nodo_11
      - nodo_12
    image: nodos-slim
    stdin_open: true
    tty: true
    networks:
      between_nodes:
        ipv4_address: 199.200.201.202
      client_side:
    ports:
      - "127.0.0.13:6174:6174/tcp"
      - "127.0.0.13:8080:8080/tcp"
    command: "13"

  nodo_14:
    container_name: nodo-14
    depends_on:
      - nodo_10
      - nodo_11
      - nodo_12
      - nodo_13
    image: nodos-slim
    stdin_open: true
    tty: true
    networks:
      between_nodes:
        ipv4_address: 245.250.255.9
      client_side:
    ports:
      - "127.0.0.14:6174:6174/tcp"
      - "127.0.0.14:8080:8080/tcp"
    command: "14"

networks:
  between_nodes:
    driver: bridge
    ipam:
      driver: default
      config:
        # 192.0.0.0 - 255.255.255.255
        - subnet: "192.0.0.0/2"

  client_side:

    
